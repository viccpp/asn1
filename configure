#!/bin/sh

# for correct parsing of the commands output
export LANG=C

usage() {
    cat <<EOF
Usage: $1 [std={11|14|17}] [compiler={gcc|clang|intel}] [pic|--with-pic]"
    std=XX          - compile using C++XX mode [14 is default]
    compiler=CC     - compile using CC [gcc is default]
    --with-pic, pic  - compile with -fPIC
    --help           - show this help
EOF
}
cleanup() { rm -f src/Makefile src/os_config.h test/Makefile; }
die() { echo "ERROR: $1"; cleanup; exit 1; }
CXX_TYPE=gcc
CXX_STD=14

# Check params
while [ "x$1" != x ]; do
    case $1 in
        --help)
            usage $0; exit 0 ;;
        std=*)
            CXX_STD=${1:4} ;;
        compiler=*)
            CXX_TYPE=${1:9} ;;
        --with-pic | pic)
            USE_PIC=1 ;;
        *)
            echo "Unknow param $1"; usage $0; exit 1 ;;
    esac
    shift
done

LIBNAME=lib__vic_asn1
LIBSUFF=$CXX_STD
OS=`uname`
AR=ar
CFLAGS="-pedantic-errors"
CXX98_WARNS="-Wno-long-long"
WARNS_ALL="-Wall"

case $CXX_TYPE in
    gcc)
        CXX="g++ -std=c++$CXX_STD"
    ;;
    clang)
        CXX="clang++ -std=c++$CXX_STD"
        CXX98_WARNS="$CXX98_WARNS -Wno-non-literal-null-conversion"
        WARNS_ALL="$WARNS_ALL -Wno-mismatched-tags"
    ;;
esac
if [ $CXX_STD = 98 ]; then
    die "C++98 is unsupported"
    CFLAGS="$CFLAGS $CXX98_WARNS"
fi
CXX="$CXX -pthread"

if [ "x$USE_PIC" != x ]; then
    echo "Using -fPIC mode"
    LIBSUFF=${LIBSUFF}_pic
    CFLAGS="$CFLAGS -fPIC -fvisibility=hidden -fvisibility-inlines-hidden"
fi

LIBNAME="${LIBNAME}_${LIBSUFF}.a"

case $OS in
    Linux)
        CFLAGS="$CFLAGS -ffunction-sections -fdata-sections"
        if [ `uname --hardware-platform` = i386 ]; then
            CFLAGS="$CFLAGS -D_FILE_OFFSET_BITS=64"
        fi
    ;;
    HP-UX)
        CXX="$CXX -mlp64 -pthread"
        CFLAGS="$CFLAGS -D_INCLUDE__STDC_A1_SOURCE -D_GLIBCXX_HAVE_MBSTATE_T -D_GLIBCXX_USE_WCHAR_T"
    ;;
    AIX)
        # AIX 6.1: flock() is emulated but lock is not inherited
        HAVE_FLOCK=0
    ;;
esac

cleanup

# Generate src/Makefile
{ cat <<EOF
#
# Autogenerated file (from Makefile.in). DO NOT EDIT!
#

EOF
sed "
s|@LIBNAME@|$LIBNAME|g
s|@OS@|$OS|g
s|@CXX@|$CXX|g
s|@CFLAGS@|$CFLAGS|g
s|@AR@|$AR|g
" src/Makefile.in
} > src/Makefile

echo "Generated src/Makefile"

# Generate test/Makefile
{ cat <<EOF
#
# Autogenerated file (from Makefile.in). DO NOT EDIT!
#

EOF
sed "
s|@LIBNAME@|$LIBNAME|g
s|@CXX@|$CXX|g
s|@CFLAGS@|$CFLAGS|g
s|@LIBS@|$TEST_LIBS|g
s|@LIBSUFF@|$LIBSUFF|g
s|@WARNS_ALL@|$WARNS_ALL|g
" test/Makefile.in
} > test/Makefile

echo "Generated test/Makefile"
