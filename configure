#!/bin/sh

# for correct parsing of the commands output
export LANG=C

usage() {
    cat <<EOF
Usage: $1 [v1|v2] [--with-gcc|--with-clang] [pic|--with-pic] [--without-regexp]"
    v1               - compile using C++98 mode [default]
    v2               - compile using C++11 mode
    --with-gcc       - compile using GCC [default]
    --with-clang     - compile using Clang
    --with-pic, pic  - compile with -fPIC
    --without-regexp - compile without January.RegExp lib
    --help           - show this help
EOF
}
cleanup() { rm -f src/Makefile src/os_config.h test/Makefile; }
die() { echo "ERROR: $1"; cleanup; exit 1; }
CXX_TYPE=gcc
ABI_VER=1
BUILD_REGEXP=1

# Check params
while [ "x$1" != x ]; do
    case $1 in
        --help)
            usage $0; exit 0 ;;
        v1)
            ABI_VER=1 ;;
        v2)
            ABI_VER=2 ;;
        --with-gcc)
            CXX_TYPE=gcc ;;
        --with-clang)
            CXX_TYPE=clang ;;
        --with-pic | pic)
            USE_PIC=1 ;;
        --without-regexp)
            BUILD_REGEXP=0 ;;
        *)
            echo "Unknow param $1"; usage $0; exit 1 ;;
    esac
    shift
done

LIBNAME=libjanuary_tools
OS=`uname`
AR=ar
CFLAGS="-pedantic-errors -D__MFISOFT_JANUARY_LIBTOOLS_BUILDING"
CXX98_WARNS="-Wno-long-long"
WARNS_ALL="-Wall"
FIND_SRC_EXPR="-name '*.cpp'"

case $CXX_TYPE in
    gcc)
        CXX=g++
    ;;
    clang)
        CXX=clang++
        CXX98_WARNS="$CXX98_WARNS -Wno-non-literal-null-conversion"
        WARNS_ALL="$WARNS_ALL -Wno-mismatched-tags"
    ;;
esac

case $ABI_VER in
    1)
        CXX="$CXX -std=c++98"
        CFLAGS="$CFLAGS $CXX98_WARNS"
        FIND_SRC_EXPR="$FIND_SRC_EXPR '!' -path '*.2/*'"
    ;;
    2)
        CXX="$CXX -std=c++11"
        LIBNAME="${LIBNAME}2"
    ;;
esac

if [ "x$USE_PIC" != x ]; then
    echo "Using -fPIC mode"
    LIBNAME="${LIBNAME}_pic"
    CFLAGS="$CFLAGS -fPIC -fvisibility=hidden -fvisibility-inlines-hidden"
fi

LIBNAME="${LIBNAME}.a"

case $OS in
    Linux)
        CFLAGS="$CFLAGS -ffunction-sections -fdata-sections"
        TEST_LIBS="-lrt"
        if [ `uname --hardware-platform` = i386 ]; then
            CFLAGS="$CFLAGS -D_FILE_OFFSET_BITS=64"
        fi
    ;;
    HP-UX)
        CXX="$CXX -mlp64 -pthread"
        CFLAGS="$CFLAGS -D_INCLUDE__STDC_A1_SOURCE -D_GLIBCXX_HAVE_MBSTATE_T -D_GLIBCXX_USE_WCHAR_T"
    ;;
    AIX)
        # AIX 6.1: flock() is emulated but lock is not inherited
        HAVE_FLOCK=0
    ;;
esac

cleanup

# Check for PCRE lib
if [ "x$BUILD_REGEXP" = x1 ]; then
cat >conftest.cpp <<EOF
#include<pcre.h>
int main()
{
    pcre *re = pcre_compile(0, 0, 0, 0, 0);
}
EOF
if ! $CXX $CFLAGS conftest.cpp -o conftest -lpcre 2>/dev/null; then
    echo "WARNING: PCRE lib not found. January.RegExp won't be built"
    BUILD_REGEXP=0
fi
rm -f conftest.cpp conftest
fi

if [ "x$BUILD_REGEXP" != x1 ]; then
    FIND_SRC_EXPR="$FIND_SRC_EXPR '!' -path './regexp/*'"
fi

# Check for flock()
if [ "x$HAVE_FLOCK" = x ]; then
cat >conftest.cpp <<EOF
#include<sys/file.h>
int main()
{
    flock(0, LOCK_EX | LOCK_NB);
}
EOF
if $CXX $CFLAGS conftest.cpp -o conftest 2>/dev/null
then HAVE_FLOCK=1
else HAVE_FLOCK=0
fi
rm -f conftest.cpp conftest
fi

cfg_param() {
    local p="s|#undef \($1\)"
    eval [ x\$$1 = x1 ] && echo "$p|#define \1 1|" || echo "$p|/* & */|"
}

# Generate os_config.h
{ echo "// Autogenerated file (from os_config.h.in). DO NOT EDIT!"
sed "
`cfg_param HAVE_FLOCK`
`cfg_param BUILD_REGEXP`
" src/os_config.h.in
} > src/os_config.h

# Generate src/Makefile
{ cat <<EOF
#
# Autogenerated file (from Makefile.in). DO NOT EDIT!
#

EOF
sed "
s|@LIBNAME@|$LIBNAME|g
s|@OS@|$OS|g
s|@CXX@|$CXX|g
s|@CFLAGS@|$CFLAGS|g
s|@AR@|$AR|g
s|@FIND_SRC_EXPR@|$FIND_SRC_EXPR|g
" src/Makefile.in
} > src/Makefile

echo "Generated src/Makefile"

# Generate test/Makefile
{ cat <<EOF
#
# Autogenerated file (from Makefile.in). DO NOT EDIT!
#

EOF
sed "
s|@LIBNAME@|$LIBNAME|g
s|@CXX@|$CXX|g
s|@CFLAGS@|$CFLAGS|g
s|@LIBS@|$TEST_LIBS|g
s|@WARNS_ALL@|$WARNS_ALL|g
" test/Makefile.in
} > test/Makefile

echo "Generated test/Makefile"
